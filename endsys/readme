End System for the CS 2520 Project - Spring 2014
Developed by Steven Forrest and Yuyu Zhou
Please direct any questions to sgf4@pitt.edu


------------------------------------------------------------------------
Compiling:

This was compiled on unixs.cis.pitt.edu using the following commands.

cc -c *.c
cc *.o -o endSystem  -lsocket -lnsl 

This compiles the files into .o files then combines them into an application named endSystem

This can be done through the readme by running

make -f Makefile

------------------------------------------------------------------------
Running:

This was tested on unixs.cis.pitt.edu. Can be run via the following command.

./endSystem

This will startup the endSystem. It will create the values required for checksum, aquire a port to listen on,
read the config files and start listening for commands. 

In order to see a list of all possible instructions type "help" and hit return

To exit type "exit" and hit return

NOTE: In lsrp.cfg only the packet_error_rate and ech0_direct_link_addr is anaylzed. More is checked in the routers.

------------------------------------------------------------------------
List of commands:

sendfile <filepath> <dst_ip>:<dst_path>		-- Send file located at a filepath to a destination IP and setup with the destination filename and path
MTU <size>					-- Set the MTU packet size. Information on this is found in our proposal
set-edge-router <IP> <Port>			-- Set the edge router of the network
printSettings					-- Print a list of known settings
rereadConfig					-- Reread all config files
help						-- List out these commands
exit						-- Exit the endSystem


------------------------------------------------------------------------
List of files:

app.c/app.h 		-- Highest layer. Reads in the file and writes to message. On the way back up it reads in message and creates file
checksum.c/checksum.h	-- Code provided by Professor Znati 
commonItems.c/commonItems.h -- Contains all information common to multiple files - structs, timeout, edge router, etc.
endSystem.c 		-- Contains the main method. Calls the setup and waits for user commands
libsocket.c/libsocket.h -- This provides wrappers around the socket calls
liblog.c/liblog.h 	-- Our logging method
lsrp.c/lsrp.h		-- Converts from data segments to packets and back up. Adds errors if packet_error_rate is set > 0
sw.c/sw.h		-- Converts from messages to data segments and back up. 
socket.c/socket.h	-- Sends and recieves data using forked processes. Does the final stage of converting packet to char array. 

Note: All of the char arrays have one extra value over what was proposed. This is to account for the '\0' in c.

------------------------------------------------------------------------
Testing:

This was tested on the unixs.cis.pitt.edu unix system.

In order to test this component without the network set the edge router IP and port to another endSystem. This way you
can test passing the packets back and forth without the network in between.
